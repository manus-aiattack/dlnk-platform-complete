version: '3.8'

services:
  manus-api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: manus-ai-attack-platform
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - LLM_MODEL_PATH=${LLM_MODEL_PATH}
    env_file:
      - .env.production
    depends_on:
      - postgres
      - redis
    networks:
      - manus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: manus-postgres
    environment:
      POSTGRES_USER: manus_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: manus_production
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - manus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U manus_user -d manus_production"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: manus-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - manus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: manus-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - manus-api
    networks:
      - manus-network
    restart: unless-stopped

networks:
  manus-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
