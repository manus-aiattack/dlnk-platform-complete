# Manus API ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: manus-api-config
  namespace: manus-ai-attack
  labels:
    app: manus-api
    component: config
data:
  app.conf: |
    # Application Configuration
    DEBUG=False
    LOG_LEVEL=INFO
    WORKER_COUNT=4
    MAX_REQUEST_SIZE=100MB
    REQUEST_TIMEOUT=30
    HEALTH_CHECK_INTERVAL=30

    # Database Configuration
    DB_POOL_SIZE=20
    DB_MAX_OVERFLOW=10
    DB_POOL_TIMEOUT=30
    DB_POOL_RECYCLE=3600

    # Redis Configuration
    REDIS_POOL_SIZE=10
    REDIS_SOCKET_TIMEOUT=5
    REDIS_SOCKET_CONNECT_TIMEOUT=5

    # AI Configuration
    OLLAMA_TIMEOUT=60
    AI_MODEL_CACHE_TTL=3600
    STRATEGY_CACHE_TTL=1800

    # Security Configuration
    JWT_SECRET_KEY=your-secret-key-here
    JWT_ALGORITHM=HS256
    JWT_EXPIRATION_HOURS=24

    # Rate Limiting
    RATE_LIMIT_REQUESTS=1000
    RATE_LIMIT_WINDOW=3600
    BURST_LIMIT=100

---
# Manus API Secrets
apiVersion: v1
kind: Secret
metadata:
  name: manus-api-secret
  namespace: manus-ai-attack
  labels:
    app: manus-api
    component: secret
type: Opaque
data:
  # Base64 encoded values
  database-url: cG9zdGdyZXNxbDovL3Bvc3RncmVzOnBvc3RncmVzX3Bhc3N3b3JkQHBvc3RncmVzLm1hbnVzLWFpLWF0dGFjay5zdmMuY2x1c3Rlci1sb2NhbDo1NDMyL21hbnVzX2FpX2F0dGFjaw==
  redis-url: cmVkaXM6Ly9yZWRpc19wYXNzd29yZEByZWRpcy5tYW51cy1haS1hdHRhY2suc3ZjLmNsdXN0ZXItbG9jYWw6NjM3OS8w
  jwt-secret: eW91ci1zZWNyZXQta2V5LWhlcmU=

---
# Manus API Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manus-api
  namespace: manus-ai-attack
  labels:
    app: manus-api
    component: application
    version: "1.0.0"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: manus-api
      component: application
  template:
    metadata:
      labels:
        app: manus-api
        component: application
        version: "1.0.0"
    spec:
      serviceAccountName: manus-api-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: api
        image: manusai/attack-platform-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: manus-api-secret
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: manus-api-secret
              key: redis-url
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: manus-api-secret
              key: jwt-secret
        - name: OLLAMA_URL
          value: "http://ollama:11434"
        - name: WORKER_COUNT
          value: "4"
        - name: LOG_LEVEL
          value: "INFO"
        volumeMounts:
        - name: manus-api-config
          mountPath: /app/config
        - name: manus-api-storage
          mountPath: /app/workspace
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
            httpHeaders:
            - name: Authorization
              value: "Bearer test-token"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
            httpHeaders:
            - name: Authorization
              value: "Bearer test-token"
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /startup
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: manus-api-config
        configMap:
          name: manus-api-config
      - name: manus-api-storage
        persistentVolumeClaim:
          claimName: manus-api-pvc
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

---
# Manus API PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: manus-api-pvc
  namespace: manus-ai-attack
  labels:
    app: manus-api
    component: storage
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: "fast-ssd"
  resources:
    requests:
      storage: 100Gi

---
# Manus API Service
apiVersion: v1
kind: Service
metadata:
  name: manus-api
  namespace: manus-ai-attack
  labels:
    app: manus-api
    component: service
    type: cluster-internal
spec:
  type: ClusterIP
  selector:
    app: manus-api
    component: application
  ports:
  - port: 8000
    targetPort: 8000
    name: http
    protocol: TCP
  - port: 8080
    targetPort: 8080
    name: metrics
    protocol: TCP
  sessionAffinity: ClientIP

---
# Manus API HorizontalPodAutoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: manus-api-hpa
  namespace: manus-ai-attack
  labels:
    app: manus-api
    component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: manus-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60

---
# Manus API PodDisruptionBudget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: manus-api-pdb
  namespace: manus-ai-attack
  labels:
    app: manus-api
    component: budget
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: manus-api
      component: application

---
# Manus API Ingress (for external access)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: manus-api-ingress
  namespace: manus-ai-attack
  labels:
    app: manus-api
    component: ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1h"
    nginx.ingress.kubernetes.io/auth-type: "basic"
    nginx.ingress.kubernetes.io/auth-secret: "api-auth"
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.manus-ai-attack.com
    secretName: manus-api-tls
  rules:
  - host: api.manus-ai-attack.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: manus-api
            port:
              number: 8000

---
# Basic Auth Secret for Ingress
apiVersion: v1
kind: Secret
metadata:
  name: api-auth
  namespace: manus-ai-attack
  labels:
    app: manus-api
    component: auth
type: Opaque
data:
  # htpasswd format: username:password
  # Generated with: htpasswd -nb username password
  auth: dGVzdDokYXJnMTEkRnJnSm91T0JzN0tEdXV5aU1vZ1VxZ01RZzZqN2N5L09OdjJlV0VyaUJjL3ZReU9qNjJm
  # test:$apr1$FrgJouOBs7KDuuyiMogUqgMQg6j7cy/ONv2eWEriBc/vQyOj62f