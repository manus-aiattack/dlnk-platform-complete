# Multi-stage Dockerfile for Backend - Optimized
# Phase 3 Task 3.1: Docker Optimization

# Stage 1: Builder
FROM python:3.11-slim as builder

WORKDIR /build

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    make \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements
COPY requirements.txt requirements-production.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir --user -r requirements.txt \
    && pip install --no-cache-dir --user -r requirements-production.txt

# Stage 2: Runtime
FROM python:3.11-slim

# Set labels
LABEL maintainer="dLNk Security Team"
LABEL version="1.0"
LABEL description="dLNk Attack Platform Backend - Optimized"

# Create non-root user
RUN groupadd -r dlnk && useradd -r -g dlnk dlnk

WORKDIR /app

# Install runtime dependencies only
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy Python packages from builder
COPY --from=builder /root/.local /home/dlnk/.local

# Copy application code
COPY --chown=dlnk:dlnk . .

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH=/home/dlnk/.local/bin:$PATH \
    PYTHONPATH=/app

# Switch to non-root user
USER dlnk

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Run application
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]

